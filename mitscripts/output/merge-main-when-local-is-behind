Up to date
This test demonstrates what happens when we try to merge the main branch into the current topic branch, when the local
main ref is behind remote. We should prefer merge origin/main, then push that.

First, the setup. We end up with local/topic at commit 1, local/main at commit 1, and remote/main at commit 2.

✓ local/main > echo 'Hello, world!' > foo.txt
✓ local/main > mit commit --all --message 'initial commit'
 
  main is synchronized with origin/main.
   
    │ main → origin/main
    │ 62612b1 initial commit - Bob Ross Jan 1 1970
   
  Run mit undo to undo this change.
 

✓ local/main > mit branch topic
 
  Created topic in /private/var/folders/0m/cpz59dyj3ts58crh9m1gbcyr0000gn/T/mitscript-794674cf5c313a4a/local/topic.
 

✓ local/main > echo 'Hey, world!' > foo.txt
✓ local/main > mit commit --all --message 'second commit'
 
  main is synchronized with origin/main.
   
    │ main → origin/main
    │ a89a265 second commit - Bob Ross Jan 1 1970
   
  Run mit undo to undo this change.
 

✓ local/main > git reset --hard HEAD^
HEAD is now at 62612b1 initial commit


Now, the test. We should merge commit 2 into local/topic, even though local/main is at commit 1.

✓ local/topic > mit merge main
 
  main was not merged into topic.
   
    │ main → topic
    │ a89a265 second commit - Bob Ross Jan 1 1970
   
  topic is synchronized with origin/topic.
 


We can see that the output was incorrect (it said "didn't merge"), however a "git log" shows the true story.

✓ local/topic > git log
commit a89a2650e05f7ac270487c38aaea36444e7d2ef8
Author: Bob Ross <bob@bobross.com>
Date:   Thu Jan 1 00:00:00 1970 +0000

    second commit

commit 62612b154234ed5a0b119c1f84c6c72eeff072db
Author: Bob Ross <bob@bobross.com>
Date:   Thu Jan 1 00:00:00 1970 +0000

    initial commit

